{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","username","id","address","className","src","alt","street","zipcode","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","React","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAhBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,GAAGC,EAAa,EAAbA,QAClC,OACQ,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,YAAyCI,IAAI,cACrD,gCACI,6BAAKJ,EAAG,KAAKH,IACb,4BAAIE,IACJ,4BAAID,IACJ,4BAAIG,EAAQI,SACZ,4BAAIJ,EAAQK,iBCajBC,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEIX,GAAIQ,EAAOG,GAAGX,GACdH,KAAMW,EAAOG,GAAGd,KAChBE,SAAUS,EAAOG,GAAGZ,SACpBD,MAAOU,EAAOG,GAAGb,MACjBG,QAASO,EAAOG,GAAGV,SALdU,SCMdC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKZ,UAAU,MAAf,SACI,uBACIA,UAAY,mCACZa,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCAbI,EARA,SAACC,GACb,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCeHC,E,kDAhBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,0CAOlB,WACI,OAAGC,KAAKF,MAAMC,SACH,2DAEJC,KAAKT,MAAMK,a,GAbEK,IAAMC,WC8CnBC,E,kDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACrB,YAAaoB,EAAME,OAAOC,SAbzC,EAAKV,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAE1B,OAAQiC,S,oBAO3C,WAAS,IAAD,OACEC,EAAiBd,KAAKF,MAAMlB,OAAOmC,QAAO,SAAAC,GAC5C,OAAOA,EAAM/C,KAAKgD,cAAcC,SAAS,EAAKpB,MAAMb,YAAYgC,kBAGxE,OAAgC,IAA7BjB,KAAKF,MAAMlB,OAAOuC,OACV,4CAGH,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACI,cAAC,EAAD,CAAWY,aAAcc,KAAKI,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUkC,e,GAjC1BZ,aCMHkB,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACI,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4507d985.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,username,id,address}) => {\r\n    return(\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img src={`https://robohash.org/${id}?200x200`}  alt=\"robot-pic\" />\r\n                <div>\r\n                    <h2>{id+\". \"+name}</h2>\r\n                    <p>{username}</p>\r\n                    <p>{email}</p>\r\n                    <p>{address.street}</p>\r\n                    <p>{address.zipcode}</p>\r\n                </div>\r\n\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return( \r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        username={robots[i].username} \r\n                        email={robots[i].email} \r\n                        address={robots[i].address}\r\n                        />\r\n                    );    \r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n// import { robots } from './robots';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className = 'pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange = {searchChange}\r\n                /> \r\n        </div>\r\n    );\r\n}  \r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n   return(\r\n       <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n           {props.children}\r\n       </div>\r\n   );\r\n}\r\n\r\nexport default Scroll;","import React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchField: event.target.value})\r\n    }\r\n    \r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n\r\n    if(this.state.robots.length === 0)\r\n        return <h1>LOADING!!!</h1>\r\n    else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots = {filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>    \r\n            </div> \r\n            );\r\n        }    \r\n    }   \r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport './containers/App.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n        <App />\n    </div> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}